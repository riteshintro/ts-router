/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as UsersIndexImport } from './routes/users/index'
import { Route as PostIndexImport } from './routes/post/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as PostLayoutImport } from './routes/post/layout'
import { Route as PostUserListIndexImport } from './routes/post/user-list/index'
import { Route as PostCommentIndexImport } from './routes/post/comment/index'
import { Route as DashboardUsersIndexImport } from './routes/dashboard/users/index'
import { Route as DashboardSettingsIndexImport } from './routes/dashboard/settings/index'
import { Route as DashboardAnalyticsIndexImport } from './routes/dashboard/analytics/index'
import { Route as PostDetailsPostIdImport } from './routes/post/details/$postId'
import { Route as DashboardUsersListImport } from './routes/dashboard/users/list'
import { Route as DashboardUsersCreateImport } from './routes/dashboard/users/create'
import { Route as DashboardSettingsProfileImport } from './routes/dashboard/settings/profile'
import { Route as DashboardSettingsPreferencesImport } from './routes/dashboard/settings/preferences'
import { Route as DashboardAnalyticsReportsImport } from './routes/dashboard/analytics/reports'
import { Route as DashboardAnalyticsMetricsImport } from './routes/dashboard/analytics/metrics'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersIndexRoute = UsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => rootRoute,
} as any)

const PostIndexRoute = PostIndexImport.update({
  id: '/post/',
  path: '/post/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const PostLayoutRoute = PostLayoutImport.update({
  id: '/post/layout',
  path: '/post/layout',
  getParentRoute: () => rootRoute,
} as any)

const PostUserListIndexRoute = PostUserListIndexImport.update({
  id: '/post/user-list/',
  path: '/post/user-list/',
  getParentRoute: () => rootRoute,
} as any)

const PostCommentIndexRoute = PostCommentIndexImport.update({
  id: '/post/comment/',
  path: '/post/comment/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardUsersIndexRoute = DashboardUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsIndexRoute = DashboardSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAnalyticsIndexRoute = DashboardAnalyticsIndexImport.update({
  id: '/analytics/',
  path: '/analytics/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const PostDetailsPostIdRoute = PostDetailsPostIdImport.update({
  id: '/post/details/$postId',
  path: '/post/details/$postId',
  getParentRoute: () => rootRoute,
} as any)

const DashboardUsersListRoute = DashboardUsersListImport.update({
  id: '/users/list',
  path: '/users/list',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardUsersCreateRoute = DashboardUsersCreateImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsProfileRoute = DashboardSettingsProfileImport.update({
  id: '/settings/profile',
  path: '/settings/profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsPreferencesRoute =
  DashboardSettingsPreferencesImport.update({
    id: '/settings/preferences',
    path: '/settings/preferences',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardAnalyticsReportsRoute = DashboardAnalyticsReportsImport.update({
  id: '/analytics/reports',
  path: '/analytics/reports',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardAnalyticsMetricsRoute = DashboardAnalyticsMetricsImport.update({
  id: '/analytics/metrics',
  path: '/analytics/metrics',
  getParentRoute: () => DashboardRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/post/layout': {
      id: '/post/layout'
      path: '/post/layout'
      fullPath: '/post/layout'
      preLoaderRoute: typeof PostLayoutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/post/': {
      id: '/post/'
      path: '/post'
      fullPath: '/post'
      preLoaderRoute: typeof PostIndexImport
      parentRoute: typeof rootRoute
    }
    '/users/': {
      id: '/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/analytics/metrics': {
      id: '/dashboard/analytics/metrics'
      path: '/analytics/metrics'
      fullPath: '/dashboard/analytics/metrics'
      preLoaderRoute: typeof DashboardAnalyticsMetricsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/analytics/reports': {
      id: '/dashboard/analytics/reports'
      path: '/analytics/reports'
      fullPath: '/dashboard/analytics/reports'
      preLoaderRoute: typeof DashboardAnalyticsReportsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings/preferences': {
      id: '/dashboard/settings/preferences'
      path: '/settings/preferences'
      fullPath: '/dashboard/settings/preferences'
      preLoaderRoute: typeof DashboardSettingsPreferencesImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings/profile': {
      id: '/dashboard/settings/profile'
      path: '/settings/profile'
      fullPath: '/dashboard/settings/profile'
      preLoaderRoute: typeof DashboardSettingsProfileImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/users/create': {
      id: '/dashboard/users/create'
      path: '/users/create'
      fullPath: '/dashboard/users/create'
      preLoaderRoute: typeof DashboardUsersCreateImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/users/list': {
      id: '/dashboard/users/list'
      path: '/users/list'
      fullPath: '/dashboard/users/list'
      preLoaderRoute: typeof DashboardUsersListImport
      parentRoute: typeof DashboardRouteImport
    }
    '/post/details/$postId': {
      id: '/post/details/$postId'
      path: '/post/details/$postId'
      fullPath: '/post/details/$postId'
      preLoaderRoute: typeof PostDetailsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/analytics/': {
      id: '/dashboard/analytics/'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof DashboardAnalyticsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/users/': {
      id: '/dashboard/users/'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/post/comment/': {
      id: '/post/comment/'
      path: '/post/comment'
      fullPath: '/post/comment'
      preLoaderRoute: typeof PostCommentIndexImport
      parentRoute: typeof rootRoute
    }
    '/post/user-list/': {
      id: '/post/user-list/'
      path: '/post/user-list'
      fullPath: '/post/user-list'
      preLoaderRoute: typeof PostUserListIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAnalyticsMetricsRoute: typeof DashboardAnalyticsMetricsRoute
  DashboardAnalyticsReportsRoute: typeof DashboardAnalyticsReportsRoute
  DashboardSettingsPreferencesRoute: typeof DashboardSettingsPreferencesRoute
  DashboardSettingsProfileRoute: typeof DashboardSettingsProfileRoute
  DashboardUsersCreateRoute: typeof DashboardUsersCreateRoute
  DashboardUsersListRoute: typeof DashboardUsersListRoute
  DashboardAnalyticsIndexRoute: typeof DashboardAnalyticsIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
  DashboardUsersIndexRoute: typeof DashboardUsersIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAnalyticsMetricsRoute: DashboardAnalyticsMetricsRoute,
  DashboardAnalyticsReportsRoute: DashboardAnalyticsReportsRoute,
  DashboardSettingsPreferencesRoute: DashboardSettingsPreferencesRoute,
  DashboardSettingsProfileRoute: DashboardSettingsProfileRoute,
  DashboardUsersCreateRoute: DashboardUsersCreateRoute,
  DashboardUsersListRoute: DashboardUsersListRoute,
  DashboardAnalyticsIndexRoute: DashboardAnalyticsIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
  DashboardUsersIndexRoute: DashboardUsersIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/post/layout': typeof PostLayoutRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/post': typeof PostIndexRoute
  '/users': typeof UsersIndexRoute
  '/dashboard/analytics/metrics': typeof DashboardAnalyticsMetricsRoute
  '/dashboard/analytics/reports': typeof DashboardAnalyticsReportsRoute
  '/dashboard/settings/preferences': typeof DashboardSettingsPreferencesRoute
  '/dashboard/settings/profile': typeof DashboardSettingsProfileRoute
  '/dashboard/users/create': typeof DashboardUsersCreateRoute
  '/dashboard/users/list': typeof DashboardUsersListRoute
  '/post/details/$postId': typeof PostDetailsPostIdRoute
  '/dashboard/analytics': typeof DashboardAnalyticsIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/users': typeof DashboardUsersIndexRoute
  '/post/comment': typeof PostCommentIndexRoute
  '/post/user-list': typeof PostUserListIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/post/layout': typeof PostLayoutRoute
  '/dashboard': typeof DashboardIndexRoute
  '/post': typeof PostIndexRoute
  '/users': typeof UsersIndexRoute
  '/dashboard/analytics/metrics': typeof DashboardAnalyticsMetricsRoute
  '/dashboard/analytics/reports': typeof DashboardAnalyticsReportsRoute
  '/dashboard/settings/preferences': typeof DashboardSettingsPreferencesRoute
  '/dashboard/settings/profile': typeof DashboardSettingsProfileRoute
  '/dashboard/users/create': typeof DashboardUsersCreateRoute
  '/dashboard/users/list': typeof DashboardUsersListRoute
  '/post/details/$postId': typeof PostDetailsPostIdRoute
  '/dashboard/analytics': typeof DashboardAnalyticsIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/users': typeof DashboardUsersIndexRoute
  '/post/comment': typeof PostCommentIndexRoute
  '/post/user-list': typeof PostUserListIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/post/layout': typeof PostLayoutRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/post/': typeof PostIndexRoute
  '/users/': typeof UsersIndexRoute
  '/dashboard/analytics/metrics': typeof DashboardAnalyticsMetricsRoute
  '/dashboard/analytics/reports': typeof DashboardAnalyticsReportsRoute
  '/dashboard/settings/preferences': typeof DashboardSettingsPreferencesRoute
  '/dashboard/settings/profile': typeof DashboardSettingsProfileRoute
  '/dashboard/users/create': typeof DashboardUsersCreateRoute
  '/dashboard/users/list': typeof DashboardUsersListRoute
  '/post/details/$postId': typeof PostDetailsPostIdRoute
  '/dashboard/analytics/': typeof DashboardAnalyticsIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/users/': typeof DashboardUsersIndexRoute
  '/post/comment/': typeof PostCommentIndexRoute
  '/post/user-list/': typeof PostUserListIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/post/layout'
    | '/dashboard/'
    | '/post'
    | '/users'
    | '/dashboard/analytics/metrics'
    | '/dashboard/analytics/reports'
    | '/dashboard/settings/preferences'
    | '/dashboard/settings/profile'
    | '/dashboard/users/create'
    | '/dashboard/users/list'
    | '/post/details/$postId'
    | '/dashboard/analytics'
    | '/dashboard/settings'
    | '/dashboard/users'
    | '/post/comment'
    | '/post/user-list'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/post/layout'
    | '/dashboard'
    | '/post'
    | '/users'
    | '/dashboard/analytics/metrics'
    | '/dashboard/analytics/reports'
    | '/dashboard/settings/preferences'
    | '/dashboard/settings/profile'
    | '/dashboard/users/create'
    | '/dashboard/users/list'
    | '/post/details/$postId'
    | '/dashboard/analytics'
    | '/dashboard/settings'
    | '/dashboard/users'
    | '/post/comment'
    | '/post/user-list'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/post/layout'
    | '/dashboard/'
    | '/post/'
    | '/users/'
    | '/dashboard/analytics/metrics'
    | '/dashboard/analytics/reports'
    | '/dashboard/settings/preferences'
    | '/dashboard/settings/profile'
    | '/dashboard/users/create'
    | '/dashboard/users/list'
    | '/post/details/$postId'
    | '/dashboard/analytics/'
    | '/dashboard/settings/'
    | '/dashboard/users/'
    | '/post/comment/'
    | '/post/user-list/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  PostLayoutRoute: typeof PostLayoutRoute
  PostIndexRoute: typeof PostIndexRoute
  UsersIndexRoute: typeof UsersIndexRoute
  PostDetailsPostIdRoute: typeof PostDetailsPostIdRoute
  PostCommentIndexRoute: typeof PostCommentIndexRoute
  PostUserListIndexRoute: typeof PostUserListIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  PostLayoutRoute: PostLayoutRoute,
  PostIndexRoute: PostIndexRoute,
  UsersIndexRoute: UsersIndexRoute,
  PostDetailsPostIdRoute: PostDetailsPostIdRoute,
  PostCommentIndexRoute: PostCommentIndexRoute,
  PostUserListIndexRoute: PostUserListIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/post/layout",
        "/post/",
        "/users/",
        "/post/details/$postId",
        "/post/comment/",
        "/post/user-list/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/",
        "/dashboard/analytics/metrics",
        "/dashboard/analytics/reports",
        "/dashboard/settings/preferences",
        "/dashboard/settings/profile",
        "/dashboard/users/create",
        "/dashboard/users/list",
        "/dashboard/analytics/",
        "/dashboard/settings/",
        "/dashboard/users/"
      ]
    },
    "/post/layout": {
      "filePath": "post/layout.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/post/": {
      "filePath": "post/index.tsx"
    },
    "/users/": {
      "filePath": "users/index.tsx"
    },
    "/dashboard/analytics/metrics": {
      "filePath": "dashboard/analytics/metrics.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/analytics/reports": {
      "filePath": "dashboard/analytics/reports.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/preferences": {
      "filePath": "dashboard/settings/preferences.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/profile": {
      "filePath": "dashboard/settings/profile.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/users/create": {
      "filePath": "dashboard/users/create.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/users/list": {
      "filePath": "dashboard/users/list.tsx",
      "parent": "/dashboard"
    },
    "/post/details/$postId": {
      "filePath": "post/details/$postId.tsx"
    },
    "/dashboard/analytics/": {
      "filePath": "dashboard/analytics/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/settings/": {
      "filePath": "dashboard/settings/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/users/": {
      "filePath": "dashboard/users/index.tsx",
      "parent": "/dashboard"
    },
    "/post/comment/": {
      "filePath": "post/comment/index.tsx"
    },
    "/post/user-list/": {
      "filePath": "post/user-list/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
